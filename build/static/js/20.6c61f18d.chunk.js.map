{"version":3,"sources":["components/charts/GradientStackedAreaChart/GradientStackedAreaChart.tsx","components/charts/VisitorsPieChart.tsx","components/charts/BarAnimationDelayChart/BarAnimationDelayChart.tsx","components/charts/ScatterChart/ScatterChart.tsx","components/charts/LineRaceChart/LineRaceChart.tsx","pages/ChartsPage.tsx"],"names":["GradientStackedAreaChart","t","useTranslation","theme","useAppSelector","state","option","tooltip","trigger","axisPointer","type","label","backgroundColor","themeObject","chartTooltipLabel","legend","data","map","item","top","left","textStyle","color","textMain","grid","right","bottom","containLabel","xAxis","boundaryGap","axisLabel","fontSize","FONT_SIZE","xxs","fontWeight","FONT_WEIGHT","light","primary","yAxis","name","series","stack","smooth","lineStyle","width","showSymbol","areaStyle","opacity","echarts","LinearGradient","offset","chartColor1","chartColor1Tint","emphasis","focus","chartColor2","chartColor2Tint","chartColor3","chartColor3Tint","chartColor4","chartColor4Tint","show","position","chartColor5","chartColor5Tint","BaseCard","padding","title","BaseChart","VisitorsPieChart","value","PieChart","showLegend","BarAnimationDelayChart","useState","data1","data2","xAxisData","setData","useEffect","setTimeout","i","push","Math","sin","cos","splitLine","nameTextStyle","align","animationDelay","idx","animationEasing","defaultOption","showDelay","formatter","params","length","gridIndex","min","scale","xAxisIndex","yAxisIndex","markLine","animation","coord","symbol","ScatterChart","LineRaceChart","setSeries","rawData","JSON","parse","stringify","Data","runAnimation","useCallback","datasetWithFilters","seriesList","forEach","country","datasetId","id","fromDatasetId","transform","config","and","dimension","gte","endLabel","labelLayout","moveOverlap","encode","x","y","itemName","animationDuration","dataset","source","order","nameLocation","height","ChartsPage","PageTitle","BaseRow","gutter","BaseCol","xs","lg"],"mappings":"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","file":"static/js/20.6c61f18d.chunk.js","sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport * as echarts from 'echarts';\nimport { BaseChart } from '@app/components/common/charts/BaseChart';\nimport { BaseCard } from '@app/components/common/BaseCard/BaseCard';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { themeObject } from '@app/styles/themes/themeVariables';\nimport { FONT_SIZE, FONT_WEIGHT } from '@app/styles/themes/constants';\n\nexport const GradientStackedAreaChart: React.FC = () => {\n  const { t } = useTranslation();\n  const theme = useAppSelector((state) => state.theme.theme);\n\n  const option = {\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        type: 'cross',\n        label: {\n          backgroundColor: themeObject[theme].chartTooltipLabel,\n        },\n      },\n    },\n    legend: {\n      data: [`coal`, `hydro`, `nuclear`, `gas`, `oil`].map((item) => t(`charts.${item}`)),\n      top: 0,\n      left: 10,\n      textStyle: {\n        color: themeObject[theme].textMain,\n      },\n    },\n    grid: {\n      top: 80,\n      left: 20,\n      right: 20,\n      bottom: 0,\n      containLabel: true,\n    },\n    xAxis: [\n      {\n        type: 'category',\n        boundaryGap: false,\n        data: ['Canada', 'China', 'Russia', 'Australia', 'Germany', 'France'],\n        axisLabel: {\n          fontSize: FONT_SIZE.xxs,\n          fontWeight: FONT_WEIGHT.light,\n          color: themeObject[theme].primary,\n        },\n      },\n    ],\n    yAxis: [\n      {\n        type: 'value',\n        name: 'TWh',\n        axisLabel: {\n          fontSize: FONT_SIZE.xxs,\n          fontWeight: FONT_WEIGHT.light,\n          color: themeObject[theme].textMain,\n        },\n      },\n    ],\n    series: [\n      {\n        name: t('charts.coal'),\n        type: 'line',\n        stack: 'Total',\n        smooth: true,\n        lineStyle: {\n          width: 0,\n        },\n        showSymbol: false,\n        areaStyle: {\n          opacity: 0.8,\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n            {\n              offset: 0,\n              color: themeObject[theme].chartColor1,\n            },\n            {\n              offset: 1,\n              color: themeObject[theme].chartColor1Tint,\n            },\n          ]),\n        },\n        emphasis: {\n          focus: 'series',\n        },\n        data: [140, 232, 101, 264, 90, 340, 250],\n      },\n      {\n        name: t('charts.hydro'),\n        type: 'line',\n        stack: 'Total',\n        smooth: true,\n        lineStyle: {\n          width: 0,\n        },\n        showSymbol: false,\n        areaStyle: {\n          opacity: 0.8,\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n            {\n              offset: 0,\n              color: themeObject[theme].chartColor2,\n            },\n            {\n              offset: 0.82,\n              color: themeObject[theme].chartColor2Tint,\n            },\n          ]),\n        },\n        emphasis: {\n          focus: 'series',\n        },\n        data: [120, 282, 111, 234, 220, 340, 310],\n      },\n      {\n        name: t('charts.nuclear'),\n        type: 'line',\n        stack: 'Total',\n        smooth: true,\n        lineStyle: {\n          width: 0,\n        },\n        showSymbol: false,\n        areaStyle: {\n          opacity: 0.8,\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n            {\n              offset: 0,\n              color: themeObject[theme].chartColor3,\n            },\n            {\n              offset: 0.65,\n              color: themeObject[theme].chartColor3Tint,\n            },\n          ]),\n        },\n        emphasis: {\n          focus: 'series',\n        },\n        data: [320, 132, 201, 334, 190, 130, 220],\n      },\n      {\n        name: t('charts.gas'),\n        type: 'line',\n        stack: 'Total',\n        smooth: true,\n        lineStyle: {\n          width: 0,\n        },\n        showSymbol: false,\n        areaStyle: {\n          opacity: 0.8,\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n            {\n              offset: 0,\n              color: themeObject[theme].chartColor4,\n            },\n            {\n              offset: 1,\n              color: themeObject[theme].chartColor4Tint,\n            },\n          ]),\n        },\n        emphasis: {\n          focus: 'series',\n        },\n        data: [220, 402, 231, 134, 190, 230, 120],\n      },\n      {\n        name: t('charts.oil'),\n        type: 'line',\n        stack: 'Total',\n        smooth: true,\n        lineStyle: {\n          width: 0,\n        },\n        showSymbol: false,\n        label: {\n          show: true,\n          position: 'top',\n        },\n        areaStyle: {\n          opacity: 0.8,\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n            {\n              offset: 0.4,\n              color: themeObject[theme].chartColor5,\n            },\n            {\n              offset: 1,\n              color: themeObject[theme].chartColor5Tint,\n            },\n          ]),\n        },\n        emphasis: {\n          focus: 'series',\n        },\n        data: [220, 302, 181, 234, 210, 290, 150],\n      },\n    ],\n  };\n\n  return (\n    <BaseCard padding=\"0 0 1.875rem\" title={t('charts.gradientLabel')}>\n      <BaseChart option={option} />\n    </BaseCard>\n  );\n};\n","import React from 'react';\nimport { BaseCard } from '@app/components/common/BaseCard/BaseCard';\nimport { useTranslation } from 'react-i18next';\nimport { PieChart } from '../common/charts/PieChart';\n\nexport const VisitorsPieChart: React.FC = () => {\n  const { t } = useTranslation();\n  const data = [\n    { value: 1048, name: t('charts.search') },\n    { value: 735, name: t('charts.direct') },\n    { value: 580, name: t('common.email') },\n    { value: 484, name: t('charts.union') },\n    { value: 300, name: t('charts.video') },\n  ];\n  const name = t('charts.visitorsFrom');\n\n  return (\n    <BaseCard padding=\"0 0 1.875rem\" title={t('charts.pie')}>\n      <PieChart data={data} name={name} showLegend={true} />\n    </BaseCard>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseCard } from '@app/components/common/BaseCard/BaseCard';\nimport { BaseChart } from '@app/components/common/charts/BaseChart';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { themeObject } from '@app/styles/themes/themeVariables';\n\nexport const BarAnimationDelayChart: React.FC = () => {\n  const { t } = useTranslation();\n  const theme = useAppSelector((state) => state.theme.theme);\n\n  const [data, setData] = useState<{ data1: number[]; data2: number[]; xAxisData: string[] }>({\n    data1: [],\n    data2: [],\n    xAxisData: [],\n  });\n\n  useEffect(() => {\n    const xAxisData: string[] = [];\n    const data1: number[] = [];\n    const data2: number[] = [];\n\n    setTimeout(() => {\n      for (let i = 0; i < 100; i++) {\n        xAxisData.push(`A${i}`);\n        data1.push((Math.sin(i / 5) * (i / 5 - 10) + i / 6) * 5);\n        data2.push((Math.cos(i / 5) * (i / 5 - 10) + i / 6) * 5);\n      }\n      setData({ data1, data2, xAxisData });\n    }, 200);\n  }, []);\n\n  const option = {\n    legend: {\n      data: [t('charts.females'), t('charts.males')],\n      left: 20,\n      top: 0,\n      textStyle: {\n        color: themeObject[theme].textMain,\n      },\n    },\n    grid: {\n      left: 20,\n      right: 20,\n      bottom: 0,\n      top: 70,\n      containLabel: true,\n    },\n    tooltip: {},\n    xAxis: {\n      data: data.xAxisData,\n      splitLine: {\n        show: false,\n      },\n    },\n    yAxis: {\n      name: t('charts.averageValue'),\n      nameTextStyle: {\n        padding: [0, -24],\n        align: 'left',\n      },\n    },\n    series: [\n      {\n        name: t('charts.females'),\n        type: 'bar',\n        data: data.data1,\n        color: themeObject[theme].chartColor2,\n        emphasis: {\n          focus: 'series',\n        },\n        animationDelay: (idx: number) => idx * 10,\n      },\n      {\n        name: t('charts.males'),\n        type: 'bar',\n        data: data.data2,\n        color: themeObject[theme].chartColor3,\n        emphasis: {\n          focus: 'series',\n        },\n        animationDelay: (idx: number) => idx * 10 + 100,\n      },\n    ],\n    animationEasing: 'elasticOut',\n  };\n  return (\n    <BaseCard padding=\"0 0 1.875rem\" title={t('charts.barLabel')}>\n      <BaseChart option={option} />\n    </BaseCard>\n  );\n};\n","import React from 'react';\nimport { BaseCard } from '@app/components/common/BaseCard/BaseCard';\nimport { BaseChart } from 'components/common/charts/BaseChart';\nimport { useTranslation } from 'react-i18next';\n\nconst data = [\n  [170.0, 59.0],\n  [159.1, 47.6],\n  [166.0, 69.8],\n  [176.2, 66.8],\n  [160.2, 75.2],\n  [172.5, 55.2],\n  [170.9, 54.2],\n  [172.9, 62.5],\n  [153.4, 42.0],\n  [160.0, 50.0],\n  [147.2, 49.8],\n  [168.2, 49.2],\n  [175.0, 73.2],\n  [157.0, 47.8],\n  [167.6, 68.8],\n  [159.5, 50.6],\n  [175.0, 82.5],\n  [166.8, 57.2],\n  [176.5, 87.8],\n  [170.2, 72.8],\n  [174.0, 54.5],\n  [173.0, 59.8],\n  [179.9, 67.3],\n  [170.5, 67.8],\n  [160.0, 47.0],\n];\n\nconst markLineOpt = {\n  animation: false,\n  lineStyle: {\n    width: 0,\n  },\n  data: [\n    [\n      {\n        coord: [0, 3],\n        symbol: 'none',\n      },\n      {\n        coord: [20, 13],\n        symbol: 'none',\n      },\n    ],\n  ],\n};\n\nconst defaultOption = {\n  grid: {\n    top: 10,\n    right: 30,\n    bottom: 0,\n    left: 15,\n    containLabel: true,\n  },\n  tooltip: {\n    showDelay: 0,\n    // eslint-disable-next-line\n    formatter: (params: any) =>\n      params.value.length > 1 ? `${params.value[0]}cm ${params.value[1]}kg ` : `${params.name}: ${params.value} 'kg `,\n    axisPointer: {\n      show: true,\n      type: 'cross',\n      lineStyle: {\n        type: 'dashed',\n        width: 1,\n      },\n    },\n  },\n  xAxis: {\n    gridIndex: 0,\n    min: 140,\n    type: 'value',\n    scale: true,\n    axisLabel: {\n      formatter: '{value} kg',\n    },\n    splitLine: {\n      show: false,\n    },\n  },\n  yAxis: {\n    gridIndex: 0,\n    min: 40,\n    type: 'value',\n    scale: true,\n    axisLabel: {\n      formatter: '{value} cm',\n    },\n    splitLine: {\n      show: false,\n    },\n  },\n  series: [\n    {\n      type: 'scatter',\n      xAxisIndex: 0,\n      yAxisIndex: 0,\n      data: data,\n      markLine: markLineOpt,\n    },\n  ],\n};\n\nexport const ScatterChart: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseCard padding=\"0 0 1.875rem\" title={t('charts.scatter')}>\n      <BaseChart option={defaultOption} />\n    </BaseCard>\n  );\n};\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseCard } from '@app/components/common/BaseCard/BaseCard';\nimport { BaseChart } from '@app/components/common/charts/BaseChart';\nimport Data from './data.json';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { themeObject } from '@app/styles/themes/themeVariables';\n\ninterface DataRow {\n  id: string;\n  fromDatasetId: string;\n  transform: {\n    type: string;\n    config: { and: [{ dimension: string; gte: number }, { dimension: string; '=': string }] };\n  };\n}\n\ninterface SeriesRow {\n  type: string;\n  datasetId: string;\n  showSymbol: boolean;\n  name: string;\n  endLabel: {\n    show: boolean;\n    formatter: (params: { value: string }) => string;\n    color?: string;\n  };\n  labelLayout: {\n    moveOverlap: string;\n  };\n  emphasis: {\n    focus: string;\n  };\n  encode: {\n    x: string;\n    y: string;\n    label: [string, string];\n    itemName: string;\n    tooltip: [string];\n  };\n}\n\nexport const LineRaceChart: React.FC = () => {\n  const [data, setData] = useState<DataRow[]>([]);\n  const [series, setSeries] = useState<SeriesRow[]>([]);\n  const rawData = JSON.parse(JSON.stringify(Data));\n  const { t } = useTranslation();\n\n  const theme = useAppSelector((state) => state.theme.theme);\n\n  const runAnimation = useCallback(() => {\n    const countries = ['Finland', 'Germany', 'Iceland', 'Norway', 'United Kingdom'];\n    const datasetWithFilters: DataRow[] = [];\n    const seriesList: SeriesRow[] = [];\n\n    countries.forEach((country) => {\n      const datasetId = `dataset_${country}`;\n      datasetWithFilters.push({\n        id: datasetId,\n        fromDatasetId: 'dataset_raw',\n        transform: {\n          type: 'filter',\n          config: {\n            and: [\n              { dimension: 'Year', gte: 1950 },\n              { dimension: 'Country', '=': country },\n            ],\n          },\n        },\n      });\n      seriesList.push({\n        type: 'line',\n        datasetId: datasetId,\n        showSymbol: false,\n        name: country,\n        endLabel: {\n          show: true,\n          formatter: (params) => `${params.value[3]}: ${params.value[0]}`,\n          color: themeObject[theme].textMain,\n        },\n        labelLayout: {\n          moveOverlap: 'shiftY',\n        },\n        emphasis: {\n          focus: 'series',\n        },\n        encode: {\n          x: 'Year',\n          y: 'Income',\n          label: ['Country', 'Income'],\n          itemName: 'Year',\n          tooltip: ['Income'],\n        },\n      });\n    });\n    setData(datasetWithFilters);\n    setSeries(seriesList);\n  }, [theme]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      runAnimation();\n    }, 200);\n  }, [runAnimation]);\n\n  const option = {\n    animationDuration: 10000,\n    dataset: [\n      {\n        id: 'dataset_raw',\n        source: rawData,\n      },\n      ...data,\n    ],\n    tooltip: {\n      order: 'valueDesc',\n      trigger: 'axis',\n    },\n    xAxis: {\n      type: 'category',\n      nameLocation: 'middle',\n    },\n    yAxis: {\n      name: '',\n    },\n    grid: {\n      left: 65,\n      right: 150,\n      top: 20,\n      bottom: 30,\n    },\n    series: series,\n  };\n\n  return (\n    <BaseCard padding=\"0 0 1.875rem\" title={t('charts.lineRace')}>\n      <BaseChart option={option} height=\"24rem\" />\n    </BaseCard>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { GradientStackedAreaChart } from '@app/components/charts/GradientStackedAreaChart/GradientStackedAreaChart';\nimport { VisitorsPieChart } from '@app/components/charts/VisitorsPieChart';\nimport { BarAnimationDelayChart } from '@app/components/charts/BarAnimationDelayChart/BarAnimationDelayChart';\nimport { ScatterChart } from '@app/components/charts/ScatterChart/ScatterChart';\nimport { LineRaceChart } from '@app/components/charts/LineRaceChart/LineRaceChart';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\nimport { BaseRow } from '@app/components/common/BaseRow/BaseRow';\nimport { BaseCol } from '@app/components/common/BaseCol/BaseCol';\n\nconst ChartsPage: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <PageTitle>{t('common.charts')}</PageTitle>\n      <BaseRow gutter={[30, 30]}>\n        <BaseCol id=\"line-race\" xs={24}>\n          <LineRaceChart />\n        </BaseCol>\n        <BaseCol id=\"gradient-stacked-area\" xs={24}>\n          <GradientStackedAreaChart />\n        </BaseCol>\n        <BaseCol id=\"bar-animation-delay\" xs={24}>\n          <BarAnimationDelayChart />\n        </BaseCol>\n        <BaseCol id=\"pie\" xs={24} lg={12}>\n          <VisitorsPieChart />\n        </BaseCol>\n        <BaseCol id=\"scatter\" xs={24} lg={12}>\n          <ScatterChart />\n        </BaseCol>\n      </BaseRow>\n    </>\n  );\n};\n\nexport default ChartsPage;\n"],"sourceRoot":""}