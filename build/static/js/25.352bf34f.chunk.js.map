{"version":3,"sources":["pages/maps/maps.styles.ts","pages/maps/ReactSimpleMapsPage/ReactSimpleMapsPage.tsx"],"names":["MapsCard","styled","BaseCard","markers","markerOffset","name","coordinates","ReactSimpleMaps","t","useTranslation","MapsCardOverride","title","projection","projectionConfig","rotate","scale","geography","geographies","map","geo","fill","stroke","rsmKey","strokeWidth","strokeLinecap","strokeLinejoin","transform","cx","cy","r","d","textAnchor","y","style","fontFamily"],"mappings":"4LAGaA,EAAWC,YAAOC,IAAPD,CAAgB,iH,sKCQlCE,EAAU,CACd,CACEC,cAAe,GACfC,KAAM,eACNC,YAAa,EAAE,SAAU,UAE3B,CAAEF,aAAc,GAAIC,KAAM,SAAUC,YAAa,EAAE,SAAU,UAC7D,CAAEF,aAAc,GAAIC,KAAM,WAAYC,YAAa,EAAE,SAAU,UAC/D,CAAEF,aAAc,GAAIC,KAAM,WAAYC,YAAa,EAAE,SAAU,UAC/D,CAAEF,aAAc,GAAIC,KAAM,SAAUC,YAAa,EAAE,QAAS,QAC5D,CAAEF,aAAc,GAAIC,KAAM,QAASC,YAAa,EAAE,SAAU,QAC5D,CAAEF,cAAe,GAAIC,KAAM,aAAcC,YAAa,EAAE,QAAS,SACjE,CAAEF,cAAe,GAAIC,KAAM,WAAYC,YAAa,EAAE,SAAU,UAChE,CAAEF,aAAc,GAAIC,KAAM,aAAcC,YAAa,EAAE,QAAS,QAChE,CAAEF,aAAc,GAAIC,KAAM,aAAcC,YAAa,EAAE,SAAU,UACjE,CAAEF,aAAc,GAAIC,KAAM,UAAWC,YAAa,EAAE,QAAS,UAC7D,CAAEF,aAAc,GAAIC,KAAM,OAAQC,YAAa,EAAE,SAAU,WAyD9CC,UAtDmB,WAChC,IAAQC,EAAMC,cAAND,EAER,OACE,qCACE,cAAC,IAAS,UAAEA,EAAE,4BACd,cAACE,EAAgB,CAACC,MAAOH,EAAE,0BAA0B,SACnD,eAAC,gBAAa,CACZI,WAAW,wBACXC,iBAAkB,CAChBC,OAAQ,CAAC,GAAI,GAAI,GACjBC,MAAO,KACP,UAEF,cAAC,cAAW,CAACC,UAnCR,qFAmC0B,SAC5B,YAAc,SAAXC,YACUC,KAAI,SAACC,GAAG,OAClB,cAAC,YAAS,CAERH,UAAWG,EACXC,KAAM,oCACNC,OAAQ,wBAHHF,EAAIG,OAIT,GACF,IAGLnB,EAAQe,KAAI,gBAAGb,EAAI,EAAJA,KAAMC,EAAW,EAAXA,YAAaF,EAAY,EAAZA,aAAY,OAC7C,eAAC,SAAM,CAAYE,YAAaA,EAAgC,UAC9D,oBACEc,KAAK,OACLC,OAAQ,uBACRE,YAAY,IACZC,cAAc,QACdC,eAAe,QACfC,UAAU,sBAAqB,UAE/B,wBAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,MAC1B,sBAAMC,EAAE,uEAEV,sBACEC,WAAW,SACXC,EAAG5B,EACH6B,MAAO,CAAEC,WAAY,YAAad,KAAM,0BAA2B,SAElEf,MAjBQA,EAmBJ,WAMrB,EAIO,IAAMK,EAAmBT,YAAOD,IAAPC,CAAgB,4C","file":"static/js/25.352bf34f.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { BaseCard } from '@app/components/common/BaseCard/BaseCard';\n\nexport const MapsCard = styled(BaseCard)`\n  height: 70vh;\n  overflow-y: auto;\n\n  .leaflet-container {\n    z-index: 0;\n  }\n`;\n","import React from 'react';\n\nimport { useTranslation } from 'react-i18next';\nimport { ComposableMap, Geographies, Geography, Marker } from 'react-simple-maps';\nimport styled from 'styled-components';\n\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\nimport { MapsCard } from '@app/pages/maps/maps.styles';\n\nconst geoUrl = 'https://raw.githubusercontent.com/deldersveld/topojson/master/world-countries.json';\n\nconst markers = [\n  {\n    markerOffset: -30,\n    name: 'Buenos Aires',\n    coordinates: [-58.3816, -34.6037],\n  },\n  { markerOffset: 15, name: 'La Paz', coordinates: [-68.1193, -16.4897] },\n  { markerOffset: 15, name: 'Brasilia', coordinates: [-47.8825, -15.7942] },\n  { markerOffset: 15, name: 'Santiago', coordinates: [-70.6693, -33.4489] },\n  { markerOffset: 15, name: 'Bogota', coordinates: [-74.0721, 4.711] },\n  { markerOffset: 15, name: 'Quito', coordinates: [-78.4678, -0.1807] },\n  { markerOffset: -30, name: 'Georgetown', coordinates: [-58.1551, 6.8013] },\n  { markerOffset: -30, name: 'Asuncion', coordinates: [-57.5759, -25.2637] },\n  { markerOffset: 15, name: 'Paramaribo', coordinates: [-55.2038, 5.852] },\n  { markerOffset: 15, name: 'Montevideo', coordinates: [-56.1645, -34.9011] },\n  { markerOffset: 15, name: 'Caracas', coordinates: [-66.9036, 10.4806] },\n  { markerOffset: 15, name: 'Lima', coordinates: [-77.0428, -12.0464] },\n];\n\nconst ReactSimpleMaps: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <PageTitle>{t('common.reactSimpleMaps')}</PageTitle>\n      <MapsCardOverride title={t('common.reactSimpleMaps')}>\n        <ComposableMap\n          projection=\"geoAzimuthalEqualArea\"\n          projectionConfig={{\n            rotate: [58, 20, 0],\n            scale: 500,\n          }}\n        >\n          <Geographies geography={geoUrl}>\n            {({ geographies }) =>\n              geographies.map((geo) => (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  fill={'var(--secondary-background-color)'}\n                  stroke={'var(--primary-color)'}\n                />\n              ))\n            }\n          </Geographies>\n          {markers.map(({ name, coordinates, markerOffset }) => (\n            <Marker key={name} coordinates={coordinates as [number, number]}>\n              <g\n                fill=\"none\"\n                stroke={'var(--primary-color)'}\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                transform=\"translate(-12, -24)\"\n              >\n                <circle cx=\"12\" cy=\"10\" r=\"3\" />\n                <path d=\"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\" />\n              </g>\n              <text\n                textAnchor=\"middle\"\n                y={markerOffset}\n                style={{ fontFamily: 'system-ui', fill: 'var(--text-main-color)' }}\n              >\n                {name}\n              </text>\n            </Marker>\n          ))}\n        </ComposableMap>\n      </MapsCardOverride>\n    </>\n  );\n};\n\nexport default ReactSimpleMaps;\n\nexport const MapsCardOverride = styled(MapsCard)`\n  height: 100%;\n`;\n"],"sourceRoot":""}