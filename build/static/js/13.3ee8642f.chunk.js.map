{"version":3,"sources":["components/common/forms/BaseButtonsForm/BaseButtonsForm.tsx","components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup.tsx","constants/patterns.ts","components/profile/profileCard/profileFormNav/nav/PersonalInfo/EmailItem/EmailItem.tsx","components/profile/profileCard/profileFormNav/nav/PersonalInfo/PhoneItem/PhoneItem.styles.ts","components/profile/profileCard/profileFormNav/nav/PersonalInfo/PhoneItem/PhoneItem.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/ConfirmPasswordItem/ConfirmPasswordItem.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/CurrentPasswordItem/CurrentPasswordItem.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/NewPasswordItem/NewPasswordItem.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/PasswordForm/PasswordForm.styles.ts","components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/PasswordForm/PasswordForm.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorOptions/TwoFactorOptions.styles.ts","components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorOptions/TwoFactorOptions.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorSwitch/TwoFactorSwitch.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorAuth.styles.ts","components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorAuth.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/SecuritySettings.tsx","pages/SecuritySettingsPage.tsx"],"names":["BaseButtonsForm","form","isFieldsChanged","setFieldsChanged","footer","loading","children","props","BaseForm","useForm","formDefault","currentForm","onCancel","resetFields","Title","BaseFormTitle","Item","BaseFormItem","List","BaseFormList","Provider","BaseButtonsGroup","className","t","useTranslation","gutter","wrap","span","block","type","onClick","htmlType","passwordPattern","RegExp","websitePattern","EmailItem","required","verified","name","$isSuccess","$successText","label","rules","message","disabled","PhoneNumberInput","styled","PhoneInput","BORDER_RADIUS","PhoneItem","validator","_","value","isValidPhoneNumber","Promise","resolve","reject","Error","ConfirmItemPassword","dependencies","getFieldValue","InputPassword","CurrentPasswordItem","NewPasswordItem","pattern","Btn","BaseButton","media","md","xl","PasswordForm","useState","isLoading","setLoading","requiredMark","onFieldsChange","onFinish","values","setTimeout","notificationController","success","console","log","BaseRow","BaseCol","xs","RadioBtn","BaseRadio","$isActive","TwoFactorOptions","selectedOption","setSelectedOption","user","useAppSelector","state","useMemo","isPhoneActive","isEmailActive","onClickInput","useCallback","mode","useEffect","email","phone","Group","onChange","e","target","TwoFactorSwitch","isEnabled","setEnabled","justify","align","checked","AuthModal","BaseModal","TwoFactorAuth","isNeedToShowVerifyBtn","number","Boolean","isClickedVerify","setClickedVerify","dispatch","useAppDispatch","onVerify","newUser","setUser","initialValues","destroyOnClose","open","closable","SecurityCodeForm","onBack","SecuritySettings","BaseCard","SecuritySettingsPage","PageTitle"],"mappings":"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","file":"static/js/13.3ee8642f.chunk.js","sourcesContent":["import React from 'react';\nimport { BaseForm, BaseFormInterface, BaseFormProps } from '@app/components/common/forms//BaseForm/BaseForm';\nimport { BaseButtonsGroup } from '@app/components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup';\nimport { BaseFormTitle } from '@app/components/common/forms/components/BaseFormTitle/BaseFormTitle';\nimport { BaseFormItem } from '@app/components/common/forms/components/BaseFormItem/BaseFormItem';\nimport { BaseFormList } from '@app/components/common/forms/components/BaseFormList/BaseFormList';\n\nexport interface BaseButtonsFormProps extends BaseFormProps {\n  isFieldsChanged: boolean;\n  setFieldsChanged?: (state: boolean) => void;\n  footer?: React.ReactElement;\n  loading?: boolean;\n}\n\nexport const BaseButtonsForm: BaseFormInterface<BaseButtonsFormProps> = ({\n  form,\n  isFieldsChanged,\n  setFieldsChanged,\n  footer,\n  loading = false,\n  children,\n  ...props\n}) => {\n  const [formDefault] = BaseForm.useForm();\n  const currentForm = form || formDefault;\n\n  const onCancel = () => {\n    currentForm?.resetFields();\n    setFieldsChanged && setFieldsChanged(false);\n  };\n\n  return (\n    <BaseForm form={currentForm} {...props}>\n      {children}\n      {isFieldsChanged && (footer || <BaseButtonsGroup loading={loading} onCancel={onCancel} />)}\n    </BaseForm>\n  );\n};\n\nBaseButtonsForm.Title = BaseFormTitle;\nBaseButtonsForm.Item = BaseFormItem;\nBaseButtonsForm.List = BaseFormList;\nBaseButtonsForm.useForm = BaseForm.useForm;\nBaseButtonsForm.Provider = BaseForm.Provider;\n","import React from 'react';\nimport { BaseButton, BaseButtonProps } from '@app/components/common/BaseButton/BaseButton';\nimport { useTranslation } from 'react-i18next';\nimport { BaseRow } from '@app/components/common/BaseRow/BaseRow';\nimport { BaseCol } from '@app/components/common/BaseCol/BaseCol';\n\ninterface BaseButtonsGroupProps extends BaseButtonProps {\n  className?: string;\n  onCancel: () => void;\n  loading?: boolean;\n}\n\nexport const BaseButtonsGroup: React.FC<BaseButtonsGroupProps> = ({ className, onCancel, loading, ...props }) => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseRow className={className} gutter={[10, 10]} wrap={false}>\n      <BaseCol span={12}>\n        <BaseButton block type=\"ghost\" onClick={onCancel} {...props}>\n          {t('common.cancel')}\n        </BaseButton>\n      </BaseCol>\n      <BaseCol span={12}>\n        <BaseButton block type=\"primary\" loading={loading} htmlType=\"submit\" {...props}>\n          {t('common.save')}\n        </BaseButton>\n      </BaseCol>\n    </BaseRow>\n  );\n};\n","export const passwordPattern = new RegExp(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/);\n\nexport const websitePattern = /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?/gi;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseInput } from '@app/components/common/inputs/BaseInput/BaseInput';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { BaseFormItemProps } from '@app/components/common/forms/components/BaseFormItem/BaseFormItem';\n\ninterface EmailItemProps extends BaseFormItemProps {\n  verified?: boolean;\n  onClick?: () => void;\n}\n\nexport const EmailItem: React.FC<EmailItemProps> = ({ required, onClick, verified, ...props }) => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"email\"\n      $isSuccess={verified}\n      $successText={t('profile.nav.personalInfo.verified')}\n      label={t('common.email')}\n      rules={[\n        { required, message: t('common.requiredField') },\n        {\n          type: 'email',\n          message: t('common.notValidEmail'),\n        },\n      ]}\n      {...props}\n    >\n      <BaseInput disabled={verified} onClick={onClick} />\n    </BaseButtonsForm.Item>\n  );\n};\n","import { BORDER_RADIUS } from '@app/styles/themes/constants';\nimport PhoneInput from 'react-phone-number-input/input';\nimport styled from 'styled-components';\n\n// has wrong prop types\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const PhoneNumberInput = styled(PhoneInput as any)`\n  height: 50px;\n  width: 100%;\n  padding: 8px 11px;\n  transition: all 0.3s;\n\n  color: var(--text-main-color);\n\n  border: 1px solid var(--border-color);\n\n  border-radius: ${BORDER_RADIUS};\n\n  &:hover {\n    border-color: #1d72b8;\n  }\n\n  &:focus {\n    outline: 0;\n    box-shadow: 0 0 0 2px rgb(0 89 171 / 20%);\n  }\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { isValidPhoneNumber } from 'react-phone-number-input';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport * as S from './PhoneItem.styles';\n\ninterface PhoneItemsProps {\n  required?: boolean;\n  onClick?: () => void;\n  verified?: boolean;\n}\n\nexport const PhoneItem: React.FC<PhoneItemsProps> = ({ required, onClick, verified }) => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"phone\"\n      $isSuccess={verified}\n      $successText={t('profile.nav.personalInfo.verified')}\n      label={t('common.phone')}\n      rules={[\n        { required, message: t('common.requiredField') },\n        () => ({\n          validator(_, value) {\n            if (!value || isValidPhoneNumber(value)) {\n              return Promise.resolve();\n            }\n            return Promise.reject(new Error(t('profile.nav.personalInfo.wrongNumber')));\n          },\n        }),\n      ]}\n    >\n      <S.PhoneNumberInput disabled={verified} className=\"ant-input\" onClick={onClick} />\n    </BaseButtonsForm.Item>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { InputPassword } from '@app/components/common/inputs/InputPassword/InputPassword';\n\nexport const ConfirmItemPassword: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"confirmPassword\"\n      label={t('profile.nav.securitySettings.confirmPassword')}\n      dependencies={['newPassword']}\n      rules={[\n        {\n          required: true,\n          message: t('profile.nav.securitySettings.requiredPassword'),\n        },\n        ({ getFieldValue }) => ({\n          validator(_, value) {\n            if (!value || getFieldValue('newPassword') === value) {\n              return Promise.resolve();\n            }\n            return Promise.reject(new Error(t('profile.nav.securitySettings.dontMatchPassword')));\n          },\n        }),\n      ]}\n    >\n      <InputPassword />\n    </BaseButtonsForm.Item>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { InputPassword } from '@app/components/common/inputs/InputPassword/InputPassword';\n\nexport const CurrentPasswordItem: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"password\"\n      label={t('profile.nav.securitySettings.currentPassword')}\n      rules={[\n        {\n          required: true,\n          message: t('profile.nav.securitySettings.requiredPassword'),\n        },\n      ]}\n    >\n      <InputPassword />\n    </BaseButtonsForm.Item>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { InputPassword } from '@app/components/common/inputs/InputPassword/InputPassword';\nimport { passwordPattern } from '@app/constants/patterns';\n\nexport const NewPasswordItem: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"newPassword\"\n      label={t('profile.nav.securitySettings.newPassword')}\n      dependencies={['password']}\n      rules={[\n        {\n          required: true,\n          message: t('profile.nav.securitySettings.requiredPassword'),\n        },\n        {\n          pattern: passwordPattern,\n          message: t('profile.nav.securitySettings.notValidPassword'),\n        },\n        ({ getFieldValue }) => ({\n          validator(_, value) {\n            if (!value || getFieldValue('password') !== value) {\n              return Promise.resolve();\n            }\n            return Promise.reject(new Error(t('profile.nav.securitySettings.samePassword')));\n          },\n        }),\n      ]}\n    >\n      <InputPassword />\n    </BaseButtonsForm.Item>\n  );\n};\n","import { BaseButton } from '@app/components/common/BaseButton/BaseButton';\nimport { media } from '@app/styles/themes/constants';\nimport styled from 'styled-components';\n\nexport const Btn = styled(BaseButton)`\n  margin: 0.5rem 0 1.5rem 0;\n  width: 100%;\n\n  @media only screen and ${media.md} {\n    max-width: 10rem;\n  }\n\n  @media only screen and ${media.xl} {\n    max-width: unset;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { ConfirmItemPassword } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/ConfirmPasswordItem/ConfirmPasswordItem';\nimport { CurrentPasswordItem } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/CurrentPasswordItem/CurrentPasswordItem';\nimport { NewPasswordItem } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/NewPasswordItem/NewPasswordItem';\nimport { notificationController } from '@app/controllers/notificationController';\nimport * as S from './PasswordForm.styles';\nimport { BaseRow } from '@app/components/common/BaseRow/BaseRow';\nimport { BaseCol } from '@app/components/common/BaseCol/BaseCol';\n\nexport const PasswordForm: React.FC = () => {\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const { t } = useTranslation();\n\n  const onFinish = (values: []) => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setFieldsChanged(false);\n      notificationController.success({ message: t('common.success') });\n      console.log(values);\n    }, 1000);\n  };\n\n  return (\n    <BaseButtonsForm\n      name=\"newPassword\"\n      requiredMark=\"optional\"\n      isFieldsChanged={isFieldsChanged}\n      onFieldsChange={() => setFieldsChanged(true)}\n      footer={\n        <S.Btn loading={isLoading} type=\"primary\" htmlType=\"submit\">\n          {t('common.confirm')}\n        </S.Btn>\n      }\n      onFinish={onFinish}\n    >\n      <BaseRow gutter={{ md: 15, xl: 30 }}>\n        <BaseCol span={24}>\n          <BaseButtonsForm.Item>\n            <BaseButtonsForm.Title>{t('profile.nav.securitySettings.changePassword')}</BaseButtonsForm.Title>\n          </BaseButtonsForm.Item>\n        </BaseCol>\n\n        <BaseCol xs={24} md={12} xl={24}>\n          <CurrentPasswordItem />\n        </BaseCol>\n\n        <BaseCol xs={24} md={12} xl={24}>\n          <NewPasswordItem />\n        </BaseCol>\n\n        <BaseCol xs={24} md={12} xl={24}>\n          <ConfirmItemPassword />\n        </BaseCol>\n      </BaseRow>\n    </BaseButtonsForm>\n  );\n};\n","import { BaseRadio } from '@app/components/common/BaseRadio/BaseRadio';\nimport styled from 'styled-components';\n\ninterface RadioBtnProps {\n  $isActive: boolean;\n}\n\nexport const RadioBtn = styled(BaseRadio)<RadioBtnProps>`\n  margin-right: 0;\n  width: 100%;\n  transition: all 0.5s ease;\n\n  ${(props) => !props.$isActive && 'opacity: 0.5'};\n\n  & > span:last-of-type {\n    flex-grow: 1;\n  }\n`;\n","import React, { useCallback, useEffect, useMemo } from 'react';\nimport { BaseRadio } from '@app/components/common/BaseRadio/BaseRadio';\nimport { EmailItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/EmailItem/EmailItem';\nimport { PhoneItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/PhoneItem/PhoneItem';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { TwoFactorAuthOption } from '@app/interfaces/interfaces';\nimport { TwoFactorAuthOptionState } from '../TwoFactorAuth';\nimport * as S from './TwoFactorOptions.styles';\n\ninterface TwoFactorOptionsProps {\n  selectedOption: TwoFactorAuthOptionState;\n  setSelectedOption: (state: TwoFactorAuthOptionState) => void;\n}\n\nexport const TwoFactorOptions: React.FC<TwoFactorOptionsProps> = ({ selectedOption, setSelectedOption }) => {\n  const user = useAppSelector((state) => state.user.user);\n\n  const { isEmailActive, isPhoneActive } = useMemo(\n    () => ({\n      isPhoneActive: selectedOption === 'phone',\n      isEmailActive: selectedOption === 'email',\n    }),\n    [selectedOption],\n  );\n\n  const onClickInput = useCallback(\n    (mode: TwoFactorAuthOption) => () => {\n      setSelectedOption(mode);\n    },\n    [setSelectedOption],\n  );\n\n  useEffect(() => {\n    if (user?.email.verified && user?.phone.verified) {\n      setSelectedOption(null);\n    }\n  }, [setSelectedOption, user?.email.verified, user?.phone.verified]);\n\n  return (\n    <>\n      <BaseRadio.Group value={selectedOption} onChange={(e) => setSelectedOption(e.target.value)}>\n        <S.RadioBtn value=\"phone\" $isActive={isPhoneActive} disabled={user?.phone.verified}>\n          <PhoneItem required={isPhoneActive} onClick={onClickInput('phone')} verified={user?.phone.verified} />\n        </S.RadioBtn>\n        <S.RadioBtn value=\"email\" $isActive={isEmailActive} disabled={user?.email.verified}>\n          <EmailItem required={isEmailActive} onClick={onClickInput('email')} verified={user?.email.verified} />\n        </S.RadioBtn>\n      </BaseRadio.Group>\n    </>\n  );\n};\n","import React from 'react';\nimport { Col, Row, Switch } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\n\ninterface TwoFactorSwitchProps {\n  isEnabled: boolean;\n  setEnabled: (state: boolean) => void;\n}\n\nexport const TwoFactorSwitch: React.FC<TwoFactorSwitchProps> = ({ isEnabled, setEnabled }) => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item>\n      <Row gutter={[10, 10]} justify=\"space-between\" align=\"middle\">\n        <Col span={20}>\n          <BaseButtonsForm.Title>{t('profile.nav.securitySettings.twoFactorAuth')}</BaseButtonsForm.Title>\n        </Col>\n        <Col span={4}>\n          <Row justify=\"end\">\n            <Col>\n              <BaseButtonsForm.Item name=\"2fa\">\n                <Switch checked={isEnabled} onChange={setEnabled} />\n              </BaseButtonsForm.Item>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </BaseButtonsForm.Item>\n  );\n};\n","import styled from 'styled-components';\nimport { BaseModal } from '@app/components/common/BaseModal/BaseModal';\n\nexport const AuthModal = styled(BaseModal)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  .ant-modal-body {\n    padding: 0;\n  }\n`;\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { Col, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { TwoFactorOptions } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorOptions/TwoFactorOptions';\nimport { TwoFactorSwitch } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorSwitch/TwoFactorSwitch';\nimport { BaseButton } from '@app/components/common/BaseButton/BaseButton';\nimport { SecurityCodeForm } from '@app/components/auth/SecurityCodeForm/SecurityCodeForm';\nimport { notificationController } from '@app/controllers/notificationController';\nimport { setUser } from '@app/store/slices/userSlice';\nimport { useAppDispatch, useAppSelector } from '@app/hooks/reduxHooks';\nimport { TwoFactorAuthOption } from '@app/interfaces/interfaces';\nimport * as S from './TwoFactorAuth.styles';\n\nexport interface CurrentOption {\n  value: 'phone' | 'email';\n  isVerified: boolean;\n}\n\nexport type TwoFactorAuthOptionState = TwoFactorAuthOption | null;\n\nexport const TwoFactorAuth: React.FC = () => {\n  const user = useAppSelector((state) => state.user.user);\n\n  const isNeedToShowVerifyBtn = useMemo(\n    () => (user?.email.name && !user?.email.verified) || (user?.phone.number && !user?.phone.verified),\n    [user],\n  );\n\n  const [isFieldsChanged, setFieldsChanged] = useState(Boolean(isNeedToShowVerifyBtn));\n  const [isLoading, setLoading] = useState(false);\n\n  const [isEnabled, setEnabled] = useState(Boolean(user?.email.verified || user?.phone.verified));\n  const [selectedOption, setSelectedOption] = useState<TwoFactorAuthOptionState>('email');\n  const [isClickedVerify, setClickedVerify] = useState(false);\n\n  const dispatch = useAppDispatch();\n\n  const { t } = useTranslation();\n\n  const onClickVerify = () => {\n    setClickedVerify(true);\n  };\n\n  const onVerify = useCallback(() => {\n    if (user && selectedOption) {\n      setLoading(false);\n      setFieldsChanged(false);\n      setClickedVerify(false);\n      notificationController.success({ message: t('common.success') });\n\n      const newUser = { ...user, [selectedOption]: { ...user[selectedOption], verified: true } };\n\n      dispatch(setUser(newUser));\n    }\n  }, [dispatch, selectedOption, t, user]);\n\n  return (\n    <>\n      <BaseButtonsForm\n        name=\"twoFactorAuth\"\n        requiredMark=\"optional\"\n        isFieldsChanged={isFieldsChanged}\n        onFieldsChange={() => setFieldsChanged(true)}\n        initialValues={{\n          email: user?.email.name,\n          phone: user?.phone.number,\n        }}\n        footer={\n          (isEnabled && (\n            <BaseButton type=\"link\" loading={isLoading} htmlType=\"submit\">\n              {t('profile.nav.securitySettings.verify')}\n            </BaseButton>\n          )) || <span />\n        }\n        onFinish={onClickVerify}\n      >\n        <Row>\n          <Col span={24}>\n            <TwoFactorSwitch isEnabled={isEnabled} setEnabled={setEnabled} />\n          </Col>\n\n          {isEnabled && (\n            <Col span={24}>\n              <TwoFactorOptions selectedOption={selectedOption} setSelectedOption={setSelectedOption} />\n            </Col>\n          )}\n        </Row>\n      </BaseButtonsForm>\n      <S.AuthModal\n        destroyOnClose\n        open={isClickedVerify}\n        footer={false}\n        closable={false}\n        onCancel={() => setClickedVerify(false)}\n      >\n        <SecurityCodeForm onBack={() => setClickedVerify(false)} onFinish={onVerify} />\n      </S.AuthModal>\n    </>\n  );\n};\n","import React from 'react';\nimport { BaseCard } from '@app/components/common/BaseCard/BaseCard';\nimport { PasswordForm } from './passwordForm/PasswordForm/PasswordForm';\nimport { TwoFactorAuth } from './twoFactorAuth/TwoFactorAuth';\nimport { BaseRow } from '@app/components/common/BaseRow/BaseRow';\nimport { BaseCol } from '@app/components/common/BaseCol/BaseCol';\n\nexport const SecuritySettings: React.FC = () => (\n  <BaseCard>\n    <BaseRow gutter={[30, 0]}>\n      <BaseCol xs={24} xl={10}>\n        <PasswordForm />\n      </BaseCol>\n\n      <BaseCol xs={24} xl={14}>\n        <TwoFactorAuth />\n      </BaseCol>\n    </BaseRow>\n  </BaseCard>\n);\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { SecuritySettings } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/SecuritySettings';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\n\nconst SecuritySettingsPage: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <PageTitle>{t('profile.nav.securitySettings.title')}</PageTitle>\n      <SecuritySettings />\n    </>\n  );\n};\n\nexport default SecuritySettingsPage;\n"],"sourceRoot":""}