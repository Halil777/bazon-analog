{"version":3,"sources":["components/common/forms/BaseButtonsForm/BaseButtonsForm.tsx","components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup.tsx","components/common/pickers/DayjsDatePicker.tsx","components/common/pickers/BaseDatePicker.tsx","components/forms/DynamicForm/DynamicForm.styles.ts","components/forms/DynamicForm/DynamicForm.tsx","components/forms/ControlForm/AddUserFormModal.tsx","components/forms/ControlForm/useResetFormOnCloseModal.ts","components/forms/ControlForm/ControlForm.styles.ts","components/forms/ControlForm/ControlForm.tsx","components/common/BaseSlider/BaseSlider.styles.ts","components/common/BaseSlider/BaseSlider.tsx","components/forms/ValidationForm/ValidationForm.tsx","components/forms/StepForm/StepForm.styles.ts","components/forms/StepForm/Steps/Step1.tsx","components/forms/StepForm/Steps/Step2.tsx","components/forms/StepForm/Steps/Step3.tsx","components/forms/StepForm/Steps/Step4.tsx","components/forms/StepForm/StepForm.tsx","pages/AdvancedFormsPage.tsx"],"names":["BaseButtonsForm","form","isFieldsChanged","setFieldsChanged","footer","loading","children","props","BaseForm","useForm","formDefault","currentForm","onCancel","resetFields","Title","BaseFormTitle","Item","BaseFormItem","List","BaseFormList","Provider","BaseButtonsGroup","className","t","useTranslation","gutter","wrap","span","block","type","onClick","htmlType","DayjsDatePicker","generatePicker","dayjsGenerateConfig","BaseDatePicker","React","forwardRef","ref","Wrapper","styled","div","RemoveBtn","MinusCircleOutlined","DynamicForm","useState","isLoading","setLoading","areas","label","value","sights","Beijing","Shanghai","name","onFinish","values","setTimeout","notificationController","success","message","console","log","autoComplete","onFieldsChange","rules","required","BaseSelect","options","onChange","setFieldsValue","fields","add","remove","map","field","BaseRow","align","justify","BaseCol","noStyle","shouldUpdate","prevValues","curValues","area","fieldKey","key","disabled","getFieldValue","item","BaseInput","BaseButton","icon","PlusOutlined","AddUserFormModal","open","prevOpenRef","useRef","useEffect","current","prevOpen","useResetFormOnCloseModal","BaseModal","title","onOk","submit","layout","InputNumber","UserList","FONT_SIZE","md","FONT_WEIGHT","semibold","Text","ul","ListItem","li","User","AddUserButton","labelCol","wrapperCol","ControlForm","setOpen","onFormFinish","forms","controlForm","users","length","user","index","BaseAvatar","UserOutlined","age","SmileOutlined","Slider","AntdSlider","BaseSlider","formItemLayout","normFile","e","fileList","Array","isArray","ValidationForm","initialValues","rate","hasFeedback","placeholder","mode","min","max","valuePropName","BaseSwitch","tooltip","marks","BaseRadio","Group","Button","BaseCheckbox","BaseRate","getValueFromEvent","action","listType","UploadOutlined","Dragger","InboxOutlined","PhoneItem","Steps","BaseSteps","FormContent","PrevButton","Select","CommonSelect","Details","DetailsRow","DetailsTitle","DetailsValue","Row","Step1","InputPassword","dependencies","validator","_","Promise","reject","Error","resolve","Picker","Step2","prefixSelector","format","addonBefore","Step3","Step4","formValues","filter","StepForm","setCurrent","Dates","getDate","setFields","setIsLoading","formLabels","login","password","confirmPassword","salutation","gender","firstName","lastName","birthday","phone","email","address1","address2","zipCode","city","country","String","steps","formFieldsUi","allFields","currentFields","uniqueData","mergeBy","size","items","validateFields","then","AdvancedFormsPage","PageTitle","xs","sm","xl","BaseCard","id","padding"],"mappings":"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","file":"static/js/16.a292825e.chunk.js","sourcesContent":["import React from 'react';\nimport { BaseForm, BaseFormInterface, BaseFormProps } from '@app/components/common/forms//BaseForm/BaseForm';\nimport { BaseButtonsGroup } from '@app/components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup';\nimport { BaseFormTitle } from '@app/components/common/forms/components/BaseFormTitle/BaseFormTitle';\nimport { BaseFormItem } from '@app/components/common/forms/components/BaseFormItem/BaseFormItem';\nimport { BaseFormList } from '@app/components/common/forms/components/BaseFormList/BaseFormList';\n\nexport interface BaseButtonsFormProps extends BaseFormProps {\n  isFieldsChanged: boolean;\n  setFieldsChanged?: (state: boolean) => void;\n  footer?: React.ReactElement;\n  loading?: boolean;\n}\n\nexport const BaseButtonsForm: BaseFormInterface<BaseButtonsFormProps> = ({\n  form,\n  isFieldsChanged,\n  setFieldsChanged,\n  footer,\n  loading = false,\n  children,\n  ...props\n}) => {\n  const [formDefault] = BaseForm.useForm();\n  const currentForm = form || formDefault;\n\n  const onCancel = () => {\n    currentForm?.resetFields();\n    setFieldsChanged && setFieldsChanged(false);\n  };\n\n  return (\n    <BaseForm form={currentForm} {...props}>\n      {children}\n      {isFieldsChanged && (footer || <BaseButtonsGroup loading={loading} onCancel={onCancel} />)}\n    </BaseForm>\n  );\n};\n\nBaseButtonsForm.Title = BaseFormTitle;\nBaseButtonsForm.Item = BaseFormItem;\nBaseButtonsForm.List = BaseFormList;\nBaseButtonsForm.useForm = BaseForm.useForm;\nBaseButtonsForm.Provider = BaseForm.Provider;\n","import React from 'react';\nimport { BaseButton, BaseButtonProps } from '@app/components/common/BaseButton/BaseButton';\nimport { useTranslation } from 'react-i18next';\nimport { BaseRow } from '@app/components/common/BaseRow/BaseRow';\nimport { BaseCol } from '@app/components/common/BaseCol/BaseCol';\n\ninterface BaseButtonsGroupProps extends BaseButtonProps {\n  className?: string;\n  onCancel: () => void;\n  loading?: boolean;\n}\n\nexport const BaseButtonsGroup: React.FC<BaseButtonsGroupProps> = ({ className, onCancel, loading, ...props }) => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseRow className={className} gutter={[10, 10]} wrap={false}>\n      <BaseCol span={12}>\n        <BaseButton block type=\"ghost\" onClick={onCancel} {...props}>\n          {t('common.cancel')}\n        </BaseButton>\n      </BaseCol>\n      <BaseCol span={12}>\n        <BaseButton block type=\"primary\" loading={loading} htmlType=\"submit\" {...props}>\n          {t('common.save')}\n        </BaseButton>\n      </BaseCol>\n    </BaseRow>\n  );\n};\n","import { AppDate } from 'constants/Dates';\nimport dayjsGenerateConfig from 'rc-picker/lib/generate/dayjs';\nimport generatePicker from 'antd/es/date-picker/generatePicker';\nimport 'antd/es/date-picker/style/index';\n\nexport const DayjsDatePicker = generatePicker<AppDate>(dayjsGenerateConfig);\n","import React from 'react';\nimport { PickerProps } from 'antd/lib/date-picker/generatePicker';\nimport { DayjsDatePicker } from './DayjsDatePicker';\nimport { AppDate } from 'constants/Dates';\n\nexport type BaseDatePickerProps = PickerProps<AppDate>;\n\nexport const BaseDatePicker = React.forwardRef<React.Component<BaseDatePickerProps>, BaseDatePickerProps>(\n  ({ className, ...props }, ref) => <DayjsDatePicker ref={ref} className={className} {...props} />,\n);\n","import { MinusCircleOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n`;\n\nexport const RemoveBtn = styled(MinusCircleOutlined)`\n  position: absolute;\n  right: 0;\n  top: 0;\n  transform: translateY(-150%);\n`;\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { BaseInput } from '@app/components/common/inputs/BaseInput/BaseInput';\nimport { BaseSelect, Option } from '@app/components/common/selects/BaseSelect/BaseSelect';\nimport { BaseButton } from '@app/components/common/BaseButton/BaseButton';\nimport { notificationController } from '@app/controllers/notificationController';\nimport * as S from './DynamicForm.styles';\nimport { BaseRow } from '@app/components/common/BaseRow/BaseRow';\nimport { BaseCol } from '@app/components/common/BaseCol/BaseCol';\n\ninterface Sight {\n  [key: string]: string[];\n}\n\nexport const DynamicForm: React.FC = () => {\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [form] = BaseButtonsForm.useForm();\n  const { t } = useTranslation();\n\n  const areas = [\n    { label: t('forms.dynamicFormLabels.beijing'), value: 'Beijing' },\n    { label: t('forms.dynamicFormLabels.shanghai'), value: 'Shanghai' },\n  ];\n\n  const sights: Sight = {\n    Beijing: [t('forms.dynamicFormLabels.tiananmen'), t('forms.dynamicFormLabels.greatWall')],\n    Shanghai: [t('forms.dynamicFormLabels.orientalPearl'), t('forms.dynamicFormLabels.theBund')],\n  };\n\n  const onFinish = (values = {}) => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setFieldsChanged(false);\n      notificationController.success({ message: t('common.success') });\n      console.log(values);\n    }, 1000);\n  };\n\n  const handleChange = () => {\n    form.setFieldsValue({ sights: [] });\n  };\n\n  return (\n    <BaseButtonsForm\n      form={form}\n      name=\"dynamicForm\"\n      isFieldsChanged={isFieldsChanged}\n      loading={isLoading}\n      onFinish={onFinish}\n      autoComplete=\"off\"\n      onFieldsChange={() => setFieldsChanged(true)}\n    >\n      <BaseButtonsForm.Item\n        name=\"area\"\n        label={t('forms.dynamicFormLabels.area')}\n        rules={[{ required: true, message: t('forms.dynamicFormLabels.areaError') }]}\n      >\n        <BaseSelect options={areas} onChange={handleChange} />\n      </BaseButtonsForm.Item>\n      <BaseButtonsForm.List name=\"sights\">\n        {(fields, { add, remove }) => (\n          <>\n            {fields.map((field) => (\n              <BaseRow key={field.key} wrap={false} gutter={[10, 10]} align=\"middle\" justify=\"space-between\">\n                <BaseCol span={12}>\n                  <BaseButtonsForm.Item\n                    noStyle\n                    // eslint-disable-next-line\n                    shouldUpdate={(prevValues: any, curValues: any) =>\n                      prevValues.area !== curValues.area || prevValues.sights !== curValues.sights\n                    }\n                  >\n                    {() => (\n                      <BaseButtonsForm.Item\n                        {...field}\n                        label={t('forms.dynamicFormLabels.sight')}\n                        name={[field.name, 'sight']}\n                        fieldKey={[field.key, 'sight']}\n                        rules={[{ required: true, message: t('forms.dynamicFormLabels.sightError') }]}\n                      >\n                        <BaseSelect disabled={!form.getFieldValue('area')}>\n                          {(sights[form.getFieldValue('area')] || []).map((item) => (\n                            <Option key={item} value={item}>\n                              {item}\n                            </Option>\n                          ))}\n                        </BaseSelect>\n                      </BaseButtonsForm.Item>\n                    )}\n                  </BaseButtonsForm.Item>\n                </BaseCol>\n                <BaseCol span={12}>\n                  <BaseButtonsForm.Item\n                    {...field}\n                    label={t('forms.dynamicFormLabels.price')}\n                    name={[field.name, 'price']}\n                    fieldKey={[field.key, 'price']}\n                    rules={[{ required: true, message: t('forms.dynamicFormLabels.priceError') }]}\n                  >\n                    <S.Wrapper>\n                      <BaseInput />\n                      <S.RemoveBtn onClick={() => remove(field.name)} />\n                    </S.Wrapper>\n                  </BaseButtonsForm.Item>\n                </BaseCol>\n              </BaseRow>\n            ))}\n\n            <BaseButtonsForm.Item>\n              <BaseButton type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                {t('forms.dynamicFormLabels.addSights')}\n              </BaseButton>\n            </BaseButtonsForm.Item>\n          </>\n        )}\n      </BaseButtonsForm.List>\n    </BaseButtonsForm>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { BaseInput } from '@app/components/common/inputs/BaseInput/BaseInput';\nimport { InputNumber } from '@app/components/common/inputs/InputNumber/InputNumber';\nimport { useResetFormOnCloseModal } from './useResetFormOnCloseModal';\nimport { BaseModal } from '@app/components/common/BaseModal/BaseModal';\n\ninterface AddUserFormModalProps {\n  open: boolean;\n  onCancel: () => void;\n}\n\nexport const AddUserFormModal: React.FC<AddUserFormModalProps> = ({ open, onCancel }) => {\n  const [form] = BaseForm.useForm();\n  const { t } = useTranslation();\n\n  useResetFormOnCloseModal({\n    form,\n    open,\n  });\n\n  const onOk = () => {\n    form.submit();\n  };\n\n  return (\n    <BaseModal title={t('forms.controlFormLabels.newUser')} open={open} onOk={onOk} onCancel={onCancel}>\n      <BaseForm form={form} layout=\"vertical\" name=\"userForm\">\n        <BaseForm.Item\n          name=\"name\"\n          label={t('common.name')}\n          rules={[{ required: true, message: t('common.requiredField') }]}\n        >\n          <BaseInput />\n        </BaseForm.Item>\n        <BaseForm.Item\n          name=\"age\"\n          label={t('common.age')}\n          rules={[{ required: true, message: t('common.requiredField') }]}\n        >\n          <InputNumber block />\n        </BaseForm.Item>\n      </BaseForm>\n    </BaseModal>\n  );\n};\n","import { BaseFormInstance } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { useEffect, useRef } from 'react';\n\nexport const useResetFormOnCloseModal = ({ form, open }: { form: BaseFormInstance; open: boolean }): void => {\n  const prevOpenRef = useRef<boolean>();\n  useEffect(() => {\n    prevOpenRef.current = open;\n  }, [open]);\n  const prevOpen = prevOpenRef.current;\n\n  useEffect(() => {\n    if (!open && prevOpen) {\n      form.resetFields();\n    }\n  }, [open, form, prevOpen]);\n};\n","import styled from 'styled-components';\nimport { BaseButton } from '@app/components/common/BaseButton/BaseButton';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { FONT_SIZE, FONT_WEIGHT } from '@app/styles/themes/constants';\n\nexport const UserList = styled(BaseForm.Item)`\n  & label {\n    font-size: ${FONT_SIZE.md};\n    font-weight: ${FONT_WEIGHT.semibold};\n  }\n`;\n\nexport const Text = styled.div`\n  color: var(--primary-color);\n  font-size: ${FONT_SIZE.md};\n  font-weight: ${FONT_WEIGHT.semibold};\n`;\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.8rem;\n`;\n\nexport const User = styled.div`\n  color: var(--text-main-color);\n  font-size: ${FONT_SIZE.md};\n  font-weight: ${FONT_WEIGHT.semibold};\n  margin-left: 0.5rem;\n`;\n\nexport const AddUserButton = styled(BaseButton)`\n  margin: 0 0.5rem;\n`;\n","import React, { useState } from 'react';\nimport { SmileOutlined, UserOutlined } from '@ant-design/icons';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { AddUserFormModal } from './AddUserFormModal';\nimport { BaseInput } from '../../common/inputs/BaseInput/BaseInput';\nimport { BaseButton } from '../../common/BaseButton/BaseButton';\nimport { useTranslation } from 'react-i18next';\nimport * as S from './ControlForm.styles';\nimport { notificationController } from '@app/controllers/notificationController';\nimport { BaseAvatar } from '@app/components/common/BaseAvatar/BaseAvatar';\n\nconst layout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 },\n};\n\ninterface UserType {\n  name: string;\n  age: string;\n}\n\nexport const ControlForm: React.FC = () => {\n  const [open, setOpen] = useState(false);\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const { t } = useTranslation();\n\n  const showUserModal = () => {\n    setOpen(true);\n  };\n\n  const hideUserModal = () => {\n    setOpen(false);\n  };\n\n  const onFinish = (values = {}) => {\n    setLoading(true);\n    setTimeout(() => {\n      setFieldsChanged(false);\n      setLoading(false);\n      notificationController.success({ message: t('common.success') });\n      console.log(values);\n    }, 1000);\n  };\n\n  return (\n    <BaseButtonsForm.Provider\n      onFormFinish={(name, { values, forms }) => {\n        if (name === 'userForm') {\n          const { controlForm } = forms;\n          const users = controlForm.getFieldValue('users') || [];\n          controlForm.setFieldsValue({ users: [...users, values] });\n          setOpen(false);\n        }\n      }}\n    >\n      <BaseButtonsForm\n        {...layout}\n        name=\"controlForm\"\n        isFieldsChanged={isFieldsChanged}\n        footer={\n          <BaseButtonsForm.Item>\n            <BaseButton htmlType=\"submit\" type=\"primary\" loading={isLoading}>\n              {t('common.submit')}\n            </BaseButton>\n            <S.AddUserButton type=\"default\" htmlType=\"button\" onClick={showUserModal}>\n              {t('forms.controlFormLabels.addUser')}\n            </S.AddUserButton>\n          </BaseButtonsForm.Item>\n        }\n        onFinish={onFinish}\n        onFieldsChange={() => setFieldsChanged(true)}\n      >\n        <BaseButtonsForm.Item\n          name=\"group\"\n          label={t('forms.controlFormLabels.groupName')}\n          rules={[{ required: true, message: t('forms.controlFormLabels.groupNameError') }]}\n        >\n          <BaseInput />\n        </BaseButtonsForm.Item>\n        <S.UserList\n          label={t('forms.controlFormLabels.userList')}\n          // eslint-disable-next-line\n          shouldUpdate={(prevValues: any, curValues: any) => prevValues.users !== curValues.users}\n        >\n          {({ getFieldValue }) => {\n            const users: UserType[] = getFieldValue('users') || [];\n            return users.length ? (\n              <S.List>\n                {users.map((user, index) => (\n                  <S.ListItem key={index}>\n                    <BaseAvatar icon={<UserOutlined />} />\n                    <S.User>\n                      {user.name} - {user.age}\n                    </S.User>\n                  </S.ListItem>\n                ))}\n              </S.List>\n            ) : (\n              <S.Text>\n                ( <SmileOutlined /> {t('forms.controlFormLabels.noUser')} )\n              </S.Text>\n            );\n          }}\n        </S.UserList>\n      </BaseButtonsForm>\n      <AddUserFormModal open={open} onCancel={hideUserModal} />\n    </BaseButtonsForm.Provider>\n  );\n};\n","import styled from 'styled-components';\nimport { Slider as AntdSlider } from 'antd';\n\nexport const Slider = styled(AntdSlider)`\n  & .ant-slider-mark-text:not(.ant-slider-mark-text-active) {\n    color: var(--subtext-color);\n  }\n`;\n","import { SliderSingleProps } from 'antd';\nimport * as S from './BaseSlider.styles';\n\nexport type BaseSliderProps = SliderSingleProps;\n\nexport const BaseSlider: React.FC<SliderSingleProps> = (props) => {\n  return <S.Slider {...props} />;\n};\n","import { useTranslation } from 'react-i18next';\nimport { UploadOutlined, InboxOutlined } from '@ant-design/icons';\nimport { useState } from 'react';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { InputNumber } from '@app/components/common/inputs/InputNumber/InputNumber';\nimport { BaseSelect, Option } from '@app/components/common/selects/BaseSelect/BaseSelect';\nimport { BaseButton } from '@app/components/common/BaseButton/BaseButton';\nimport { BaseSwitch } from '@app/components/common/BaseSwitch/BaseSwitch';\nimport { BaseRadio } from '@app/components/common/BaseRadio/BaseRadio';\nimport { BaseSlider } from '@app/components/common/BaseSlider/BaseSlider';\nimport { BaseUpload } from '@app/components/common/BaseUpload/BaseUpload';\nimport { BaseRate } from '@app/components/common/BaseRate/BaseRate';\nimport { notificationController } from '@app/controllers/notificationController';\nimport { BaseRow } from '@app/components/common/BaseRow/BaseRow';\nimport { BaseCol } from '@app/components/common/BaseCol/BaseCol';\nimport { BaseCheckbox } from '@app/components/common/BaseCheckbox/BaseCheckbox';\n\nconst formItemLayout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 },\n};\n\nconst normFile = (e = { fileList: [] }) => {\n  if (Array.isArray(e)) {\n    return e;\n  }\n  return e && e.fileList;\n};\n\nexport const ValidationForm: React.FC = () => {\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const { t } = useTranslation();\n\n  const onFinish = async (values = {}) => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setFieldsChanged(false);\n      notificationController.success({ message: t('common.success') });\n      console.log(values);\n    }, 1000);\n  };\n\n  return (\n    <BaseButtonsForm\n      {...formItemLayout}\n      isFieldsChanged={isFieldsChanged}\n      onFieldsChange={() => setFieldsChanged(true)}\n      name=\"validateForm\"\n      initialValues={{\n        'input-number': 3,\n        'checkbox-group': ['A', 'B'],\n        rate: 3.5,\n      }}\n      footer={\n        <BaseButtonsForm.Item>\n          <BaseButton type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n            {t('common.submit')}\n          </BaseButton>\n        </BaseButtonsForm.Item>\n      }\n      onFinish={onFinish}\n    >\n      <BaseButtonsForm.Item\n        name=\"select\"\n        label={t('forms.validationFormLabels.select')}\n        hasFeedback\n        rules={[{ required: true, message: t('forms.validationFormLabels.countryError') }]}\n      >\n        <BaseSelect placeholder={t('forms.validationFormLabels.selectCountry')}>\n          <Option value=\"china\">{t('forms.validationFormLabels.china')}</Option>\n          <Option value=\"usa\">{t('forms.validationFormLabels.usa')}</Option>\n        </BaseSelect>\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item\n        name=\"select-multiple\"\n        label={t('forms.validationFormLabels.selectMultiple')}\n        rules={[{ required: true, message: t('forms.validationFormLabels.colorError'), type: 'array' }]}\n      >\n        <BaseSelect mode=\"multiple\" placeholder={t('forms.validationFormLabels.selectColor')}>\n          <Option value=\"red\">{t('forms.validationFormLabels.red')}</Option>\n          <Option value=\"green\">{t('forms.validationFormLabels.green')}</Option>\n          <Option value=\"blue\">{t('forms.validationFormLabels.blue')}</Option>\n        </BaseSelect>\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item label={t('forms.validationFormLabels.inputNumber')}>\n        <label>\n          <BaseButtonsForm.Item name=\"input-number\" noStyle>\n            <InputNumber min={1} max={10} />\n          </BaseButtonsForm.Item>\n        </label>\n        <span> {t('forms.validationFormLabels.machines')}</span>\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item name=\"switch\" label={t('forms.validationFormLabels.switch')} valuePropName=\"checked\">\n        <BaseSwitch />\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item name=\"slider\" label={t('forms.validationFormLabels.slider')}>\n        <BaseSlider\n          tooltip={{ open: false }}\n          marks={{\n            0: 'A',\n            20: 'B',\n            40: 'C',\n            60: 'D',\n            80: 'E',\n            100: 'F',\n          }}\n        />\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item name=\"radio-group\" label={t('forms.validationFormLabels.radioGroup')}>\n        <BaseRadio.Group>\n          <BaseRadio value=\"a\">{t('forms.validationFormLabels.item')} 1</BaseRadio>\n          <BaseRadio value=\"b\">{t('forms.validationFormLabels.item')} 2</BaseRadio>\n          <BaseRadio value=\"c\">{t('forms.validationFormLabels.item')} 3</BaseRadio>\n        </BaseRadio.Group>\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item\n        name=\"radio-button\"\n        label={t('forms.validationFormLabels.radioButton')}\n        rules={[{ required: true, message: t('forms.validationFormLabels.itemError') }]}\n      >\n        <BaseRadio.Group>\n          <BaseRadio.Button value=\"a\">{t('forms.validationFormLabels.item')} 1</BaseRadio.Button>\n          <BaseRadio.Button value=\"b\">{t('forms.validationFormLabels.item')} 2</BaseRadio.Button>\n          <BaseRadio.Button value=\"c\">{t('forms.validationFormLabels.item')} 3</BaseRadio.Button>\n        </BaseRadio.Group>\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item name=\"checkbox-group\" label={t('forms.validationFormLabels.checkboxGroup')}>\n        <BaseCheckbox.Group>\n          <BaseRow>\n            <BaseCol span={8}>\n              <BaseCheckbox value=\"A\">A</BaseCheckbox>\n            </BaseCol>\n            <BaseCol span={8}>\n              <BaseCheckbox value=\"B\" disabled>\n                B\n              </BaseCheckbox>\n            </BaseCol>\n            <BaseCol span={8}>\n              <BaseCheckbox value=\"C\">C</BaseCheckbox>\n            </BaseCol>\n            <BaseCol span={8}>\n              <BaseCheckbox value=\"D\">D</BaseCheckbox>\n            </BaseCol>\n            <BaseCol span={8}>\n              <BaseCheckbox value=\"E\">E</BaseCheckbox>\n            </BaseCol>\n            <BaseCol span={8}>\n              <BaseCheckbox value=\"F\">F</BaseCheckbox>\n            </BaseCol>\n          </BaseRow>\n        </BaseCheckbox.Group>\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item name=\"rate\" label={t('forms.validationFormLabels.rate')}>\n        <BaseRate />\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item\n        name=\"upload\"\n        label={t('forms.validationFormLabels.upload')}\n        valuePropName=\"fileList\"\n        getValueFromEvent={normFile}\n      >\n        <BaseUpload name=\"logo\" action=\"/upload.do\" listType=\"picture\">\n          <BaseButton type=\"default\" icon={<UploadOutlined />}>\n            {t('forms.validationFormLabels.clickToUpload')}\n          </BaseButton>\n        </BaseUpload>\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item label={t('forms.validationFormLabels.dragger')}>\n        <BaseButtonsForm.Item name=\"dragger\" valuePropName=\"fileList\" getValueFromEvent={normFile} noStyle>\n          <BaseUpload.Dragger name=\"files\" action=\"/upload.do\">\n            <p>\n              <InboxOutlined />\n            </p>\n            <p>{t('forms.validationFormLabels.clickToDrag')}</p>\n            <p>{t('forms.validationFormLabels.supportSingle')}</p>\n          </BaseUpload.Dragger>\n        </BaseButtonsForm.Item>\n      </BaseButtonsForm.Item>\n    </BaseButtonsForm>\n  );\n};\n","import styled from 'styled-components';\nimport { BaseSelect as CommonSelect } from '@app/components/common/selects/BaseSelect/BaseSelect';\nimport { BaseButton } from '@app/components/common/BaseButton/BaseButton';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { FONT_SIZE, FONT_WEIGHT } from '@app/styles/themes/constants';\nimport { BaseSteps } from '@app/components/common/BaseSteps/BaseSteps';\n\nexport const PhoneItem = styled(BaseForm.Item)`\n  .ant-input-group-addon {\n    padding: 0;\n  }\n\n  .ant-input-group-addon > div {\n    width: 100% !important;\n  }\n`;\n\nexport const Steps = styled(BaseSteps)``;\n\nexport const FormContent = styled.div`\n  margin: 1.25rem 0.5rem;\n`;\n\nexport const PrevButton = styled(BaseButton)`\n  margin: 0 0.5rem;\n`;\n\nexport const Select = styled(CommonSelect)`\n  width: 5.9375rem;\n`;\n\nexport const Details = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1.25rem;\n  margin: 1.25rem 0.5rem;\n`;\n\nexport const DetailsRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const DetailsTitle = styled.div`\n  color: var(--text-light-color);\n  font-size: ${FONT_SIZE.md};\n  font-weight: ${FONT_WEIGHT.semibold};\n  margin-right: 0.5rem;\n`;\n\nexport const DetailsValue = styled.div`\n  color: var(--text-main-color);\n  font-size: ${FONT_SIZE.md};\n  font-weight: ${FONT_WEIGHT.semibold};\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  gap: 0.5rem;\n`;\n","import { useTranslation } from 'react-i18next';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { BaseInput } from '@app/components/common/inputs/BaseInput/BaseInput';\nimport { InputPassword } from '@app/components/common/inputs/InputPassword/InputPassword';\nimport * as S from '../StepForm.styles';\n\nexport const Step1: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <S.FormContent>\n      <BaseForm.Item\n        name=\"login\"\n        label={t('forms.stepFormLabels.login')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.loginError') }]}\n      >\n        <BaseInput />\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"password\"\n        label={t('common.password')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.passwordError') }]}\n      >\n        <InputPassword />\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"confirmPassword\"\n        label={t('common.confirmPassword')}\n        dependencies={['password']}\n        rules={[\n          { required: true, message: t('common.confirmPasswordError') },\n          ({ getFieldValue }) => ({\n            validator(_, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n              return Promise.reject(new Error(t('common.confirmPasswordError')));\n            },\n          }),\n        ]}\n      >\n        <InputPassword />\n      </BaseForm.Item>\n    </S.FormContent>\n  );\n};\n","import { useTranslation } from 'react-i18next';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { BaseInput } from '@app/components/common/inputs/BaseInput/BaseInput';\nimport { BaseRadio } from '@app/components/common/BaseRadio/BaseRadio';\nimport { BaseDatePicker } from '@app/components/common/pickers/BaseDatePicker';\nimport { BaseSelect, Option } from '@app/components/common/selects/BaseSelect/BaseSelect';\nimport * as S from '../StepForm.styles';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Picker = styled(BaseDatePicker)`\n  width: 100%;\n`;\n\nexport const Step2: React.FC = () => {\n  const { t } = useTranslation();\n\n  const prefixSelector = (\n    <BaseForm.Item name=\"prefix\" noStyle>\n      <S.Select>\n        <Option value=\"375\">+375</Option>\n        <Option value=\"7\">+7</Option>\n      </S.Select>\n    </BaseForm.Item>\n  );\n\n  return (\n    <S.FormContent>\n      <BaseForm.Item\n        name=\"salutation\"\n        label={t('forms.stepFormLabels.salutation')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.salutationError') }]}\n      >\n        <BaseRadio.Group>\n          <BaseRadio.Button value=\"mr\">{t('forms.stepFormLabels.mr')}</BaseRadio.Button>\n          <BaseRadio.Button value=\"mrs\">{t('forms.stepFormLabels.mrs')}</BaseRadio.Button>\n        </BaseRadio.Group>\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"gender\"\n        label={t('forms.stepFormLabels.gender')}\n        rules={[{ required: true, message: t('common.requiredField') }]}\n      >\n        <BaseSelect placeholder={t('forms.stepFormLabels.gender')}>\n          <Option value=\"male\">{t('forms.stepFormLabels.male')}</Option>\n          <Option value=\"female\">{t('forms.stepFormLabels.female')}</Option>\n        </BaseSelect>\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"firstName\"\n        label={t('common.firstName')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.firstNameError') }]}\n      >\n        <BaseInput />\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"lastName\"\n        label={t('common.lastName')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.lastNameError') }]}\n      >\n        <BaseInput />\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"birthday\"\n        label={t('forms.stepFormLabels.birthday')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.birthdayError') }]}\n      >\n        <Picker format=\"YYYY-MM-DD\" />\n      </BaseForm.Item>\n      <S.PhoneItem\n        name=\"phone\"\n        label={t('common.phone')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.phoneError') }]}\n      >\n        <BaseInput addonBefore={prefixSelector} />\n      </S.PhoneItem>\n      <BaseForm.Item\n        name=\"email\"\n        label={t('common.email')}\n        rules={[\n          {\n            type: 'email',\n            message: t('common.notValidEmail'),\n          },\n        ]}\n      >\n        <BaseInput />\n      </BaseForm.Item>\n    </S.FormContent>\n  );\n};\n","import { useTranslation } from 'react-i18next';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { BaseInput } from '@app/components/common/inputs/BaseInput/BaseInput';\nimport * as S from '../StepForm.styles';\nimport React from 'react';\n\nexport const Step3: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <S.FormContent>\n      <BaseForm.Item\n        name=\"address1\"\n        label={`${t('common.address')} 1`}\n        rules={[{ required: true, message: t('forms.stepFormLabels.addressError') }]}\n      >\n        <BaseInput />\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"address2\"\n        label={`${t('common.address')} 2`}\n        rules={[{ required: true, message: t('forms.stepFormLabels.addressError') }]}\n      >\n        <BaseInput />\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"zipCode\"\n        label={t('common.zipcode')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.zipCodeError') }]}\n      >\n        <BaseInput />\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"city\"\n        label={t('common.city')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.cityError') }]}\n      >\n        <BaseInput />\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"country\"\n        label={t('common.country')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.countryError') }]}\n      >\n        <BaseInput />\n      </BaseForm.Item>\n    </S.FormContent>\n  );\n};\n","import * as S from '../StepForm.styles';\n\ninterface Field {\n  name?: string;\n  value: string;\n}\n\ninterface Step4Props {\n  formValues: Field[];\n}\n\nexport const Step4: React.FC<Step4Props> = ({ formValues }) => {\n  return (\n    <S.Details key=\"4\">\n      {formValues\n        .filter((item) => !!item.value)\n        .map((item: Field, index: number) => {\n          return (\n            <S.DetailsRow key={index}>\n              <S.DetailsTitle>{item.name}</S.DetailsTitle>\n              <S.DetailsValue>{item.value}</S.DetailsValue>\n            </S.DetailsRow>\n          );\n        })}\n    </S.Details>\n  );\n};\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { BaseButton } from '@app/components/common/BaseButton/BaseButton';\nimport { Step1 } from './Steps/Step1';\nimport { Step2 } from './Steps/Step2';\nimport { Step3 } from './Steps/Step3';\nimport { Step4 } from './Steps/Step4';\nimport { notificationController } from '@app/controllers/notificationController';\nimport { Dates } from '@app/constants/Dates';\nimport { mergeBy } from '@app/utils/utils';\nimport * as S from './StepForm.styles';\nimport { Steps } from './StepForm.styles';\ninterface FormValues {\n  [key: string]: string | undefined;\n}\n\ninterface FieldData {\n  name: string | number;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  value?: any;\n}\n\nexport const StepForm: React.FC = () => {\n  const [current, setCurrent] = useState(0);\n  const [form] = BaseForm.useForm();\n  const [fields, setFields] = useState<FieldData[]>([\n    { name: 'login', value: 'Jerri' },\n    { name: 'password', value: '123456' },\n    { name: 'confirmPassword', value: '123456' },\n    { name: 'salutation', value: 'mr' },\n    { name: 'gender', value: 'male' },\n    { name: 'firstName', value: 'John' },\n    { name: 'lastName', value: 'Black' },\n    { name: 'birthday', value: Dates.getDate(1576789200000) },\n    { name: 'phone', value: '298573124' },\n    { name: 'email', value: '' },\n    { name: 'address1', value: 'Slobodskay street' },\n    { name: 'address2', value: 'Nevski street' },\n    { name: 'zipCode', value: '435123' },\n    { name: 'city', value: 'Minsk' },\n    { name: 'country', value: 'Belarus' },\n    { name: 'prefix', value: '+7' },\n  ]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { t } = useTranslation();\n\n  const formLabels: FormValues = {\n    login: t('forms.stepFormLabels.login'),\n    password: t('common.password'),\n    confirmPassword: t('common.confirmPassword'),\n    salutation: t('forms.stepFormLabels.salutation'),\n    gender: t('forms.stepFormLabels.gender'),\n    firstName: t('common.firstName'),\n    lastName: t('common.lastName'),\n    birthday: t('forms.stepFormLabels.birthday'),\n    phone: t('common.phone'),\n    email: t('common.email'),\n    address1: `${t('common.address')} 1`,\n    address2: `${t('common.address')} 2`,\n    zipCode: t('common.zipcode'),\n    city: t('common.city'),\n    country: t('common.country'),\n  };\n\n  const formValues = fields\n    .filter((item) => item.name !== 'prefix')\n    .map((item) => ({\n      name: formLabels[item.name],\n      value: String(item.name === 'birthday' && item.value ? item.value.format('YYYY-MM-DD') : item.value),\n    }));\n\n  const next = () => {\n    form.validateFields().then(() => {\n      setCurrent(current + 1);\n    });\n  };\n\n  const prev = () => {\n    setCurrent(current - 1);\n  };\n\n  const onFinish = () => {\n    setIsLoading(true);\n    setTimeout(() => {\n      notificationController.success({ message: t('common.success') });\n      setIsLoading(false);\n      setCurrent(0);\n    }, 1500);\n  };\n\n  const steps = [\n    {\n      title: t('common.country'),\n    },\n    {\n      title: t('forms.stepFormLabels.info'),\n    },\n    {\n      title: t('forms.stepFormLabels.location'),\n    },\n    {\n      title: t('forms.stepFormLabels.confirm'),\n    },\n  ];\n\n  const formFieldsUi = [\n    <Step1 key=\"1\" />,\n    <Step2 key=\"2\" />,\n    <Step3 key=\"3\" />,\n    <Step4 key=\"4\" formValues={formValues} />,\n  ];\n\n  return (\n    <BaseForm\n      name=\"stepForm\"\n      form={form}\n      fields={fields}\n      onFieldsChange={(_, allFields) => {\n        const currentFields = allFields.map((item) => ({\n          name: Array.isArray(item.name) ? item.name[0] : '',\n          value: item.value,\n        }));\n        const uniqueData = mergeBy(fields, currentFields, 'name');\n        setFields(uniqueData);\n      }}\n    >\n      <Steps size=\"small\" current={current} items={steps} />\n\n      <div>{formFieldsUi[current]}</div>\n      <S.Row>\n        {current > 0 && (\n          <S.PrevButton type=\"default\" onClick={() => prev()}>\n            {t('forms.stepFormLabels.previous')}\n          </S.PrevButton>\n        )}\n        {current < steps.length - 1 && (\n          <BaseButton type=\"primary\" onClick={() => next()}>\n            {t('forms.stepFormLabels.next')}\n          </BaseButton>\n        )}\n        {current === steps.length - 1 && (\n          <BaseButton type=\"primary\" onClick={onFinish} loading={isLoading}>\n            {t('forms.stepFormLabels.done')}\n          </BaseButton>\n        )}\n      </S.Row>\n    </BaseForm>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\nimport { BaseCard } from '@app/components/common/BaseCard/BaseCard';\nimport { DynamicForm } from '@app/components/forms/DynamicForm/DynamicForm';\nimport { ControlForm } from '@app/components/forms/ControlForm/ControlForm';\nimport { ValidationForm } from '@app/components/forms/ValidationForm/ValidationForm';\nimport { StepForm } from '@app/components/forms/StepForm/StepForm';\nimport { BaseRow } from '@app/components/common/BaseRow/BaseRow';\nimport { BaseCol } from '@app/components/common/BaseCol/BaseCol';\n\nconst AdvancedFormsPage: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <PageTitle>{t('common.advancedForms')}</PageTitle>\n      <BaseRow gutter={[30, 30]}>\n        <BaseCol xs={24} sm={24} xl={10}>\n          <BaseCard id=\"validation form\" title={t('forms.validationForm')} padding=\"1.25rem\">\n            <ValidationForm />\n          </BaseCard>\n        </BaseCol>\n\n        <BaseCol xs={24} sm={24} xl={14}>\n          <BaseRow gutter={[30, 30]}>\n            <BaseCol span={24}>\n              <BaseCard id=\"control-form\" title={t('forms.controlForm')} padding=\"1.25rem\">\n                <ControlForm />\n              </BaseCard>\n            </BaseCol>\n            <BaseCol span={24}>\n              <BaseCard id=\"dynamic-form\" title={t('forms.dynamicForm')} padding=\"1.25rem\">\n                <DynamicForm />\n              </BaseCard>\n            </BaseCol>\n            <BaseCol span={24}>\n              <BaseCard id=\"step-form\" title={t('forms.stepForm')} padding=\"1.25rem\">\n                <StepForm />\n              </BaseCard>\n            </BaseCol>\n          </BaseRow>\n        </BaseCol>\n      </BaseRow>\n    </>\n  );\n};\n\nexport default AdvancedFormsPage;\n"],"sourceRoot":""}