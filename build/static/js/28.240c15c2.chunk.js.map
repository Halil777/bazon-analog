{"version":3,"sources":["components/bazon/catalog-components/SearchComponent.tsx","components/types/catalog/catalogTypes.ts","components/tables/fixedTable/FixedTable.tsx","pages/bazon-pages/catalog/Catalog.tsx"],"names":["SearchComponent","onSearchSelect","setFilteredData","data","useState","searchTerm","setSearchTerm","useEffect","lowerCaseSearchTerm","trim","toLowerCase","filtered","filter","item","cross_number","includes","TextField","label","value","onChange","e","target","fullWidth","sx","width","InputProps","endAdornment","onClick","style","background","border","cursor","columns","title","dataIndex","key","fixed","FixedTable","loading","tableRef","ref","dataSource","scroll","x","locale","emptyText","Catalog","setData","setLoading","useRef","filteredData","fetchData","axios","get","response","console","log","error","display","alignItems","justifyContent","marginBottom","selectedValue","gap","currentTableRef","current","filename","sheet","icon","ExportOutlined","SettingOutlined","Incomes","length","Text"],"mappings":"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","file":"static/js/28.240c15c2.chunk.js","sourcesContent":["// SearchComponent.tsx\nimport React, { FC, useState, useEffect } from 'react';\nimport TextField from '@mui/material/TextField';\nimport { Autopart } from '@app/components/types/catalog/catalogTypes';\n\ninterface SearchComponentProps {\n  onSearchSelect: (selectedValue: string) => void;\n  setFilteredData: (data: Autopart[]) => void; // Fix the prop name here\n  data: Autopart[];\n}\n\nconst SearchComponent: FC<SearchComponentProps> = ({ onSearchSelect, setFilteredData, data }) => {\n  const [searchTerm, setSearchTerm] = useState<string>('');\n\n  const handleSearch = () => {\n    onSearchSelect(searchTerm);\n  };\n\n  useEffect(() => {\n    const lowerCaseSearchTerm = searchTerm.trim().toLowerCase();\n\n    if (lowerCaseSearchTerm === '') {\n      // If no search term, show the full table\n      setFilteredData(data);\n    } else {\n      // If there's a search term, filter the table\n      const filtered = data.filter((item) => {\n        // Check if item.cross_number is defined before accessing it\n        return item.cross_number && item.cross_number.toLowerCase().includes(lowerCaseSearchTerm);\n      });\n      setFilteredData(filtered);\n    }\n  }, [data, searchTerm]);\n\n  return (\n    <TextField\n      label=\"Search Cross Number\"\n      value={searchTerm}\n      onChange={(e) => setSearchTerm(e.target.value)}\n      fullWidth\n      sx={{ width: 400 }}\n      InputProps={{\n        endAdornment: (\n          <button onClick={handleSearch} style={{ background: 'none', border: 'none', cursor: 'pointer' }}>\n            Search\n          </button>\n        ),\n      }}\n    />\n  );\n};\n\nexport default SearchComponent;\n","import type { ColumnsType } from 'antd/es/table';\n\nexport interface Autopart {\n  autopart_id: number;\n  brand_id: number | null;\n  model_id: number | null;\n  generation_id: number;\n  manufacturer_id: number | null;\n  name: string;\n  front_back: string | null;\n  left_right: string;\n  number_of_part: number | null;\n  year: number | null;\n  color: string | null;\n  comment: string | null;\n  cross_number: string | null;\n  note: string | null;\n  marking: string | null;\n  is_archive: boolean;\n  not_for_export: boolean;\n  site_link: string | null;\n  video: string | null;\n  old_bar_code: string | null;\n  old_data: string | null;\n  is_used: string;\n  status: string;\n  created_at: string;\n  updated_at: string;\n  model: {\n    id: number;\n    name: string;\n    model_id: number;\n  } | null;\n  brand: string | null;\n  generation: {\n    id: number;\n    name: string;\n    model_id: number;\n  };\n}\n\nexport const columns: ColumnsType<Autopart> = [\n  {\n    title: 'Autopart ID',\n    dataIndex: 'autopart_id',\n    key: 'autopart_id',\n    width: 100,\n  },\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    width: 150,\n  },\n  {\n    title: 'Front/Back',\n    dataIndex: 'front_back',\n    key: 'front_back',\n    width: 100,\n  },\n  {\n    title: 'Left/Right',\n    dataIndex: 'left_right',\n    key: 'left_right',\n    width: 100,\n  },\n  {\n    title: 'Number of Part',\n    dataIndex: 'number_of_part',\n    key: 'number_of_part',\n    width: 100,\n  },\n  {\n    title: 'Year',\n    dataIndex: 'year',\n    key: 'year',\n    width: 100,\n  },\n  {\n    title: 'Color',\n    dataIndex: 'color',\n    key: 'color',\n    width: 100,\n  },\n  {\n    title: 'Comment',\n    dataIndex: 'comment',\n    key: 'comment',\n    width: 150,\n  },\n  {\n    title: 'Cross Number',\n    dataIndex: 'cross_number',\n    key: 'cross_number',\n    width: 150,\n  },\n  {\n    title: 'Note',\n    dataIndex: 'note',\n    key: 'note',\n    width: 150,\n  },\n  {\n    title: 'Marking',\n    dataIndex: 'marking',\n    key: 'marking',\n    width: 150,\n  },\n  {\n    title: 'Is Archive',\n    dataIndex: 'is_archive',\n    key: 'is_archive',\n    width: 100,\n  },\n  {\n    title: 'Not for Export',\n    dataIndex: 'not_for_export',\n    key: 'not_for_export',\n    width: 120,\n  },\n  {\n    title: 'Site Link',\n    dataIndex: 'site_link',\n    key: 'site_link',\n    width: 150,\n  },\n  {\n    title: 'Video',\n    dataIndex: 'video',\n    key: 'video',\n    width: 150,\n  },\n  {\n    title: 'Old Bar Code',\n    dataIndex: 'old_bar_code',\n    key: 'old_bar_code',\n    width: 150,\n  },\n  {\n    title: 'Old Data',\n    dataIndex: 'old_data',\n    key: 'old_data',\n    width: 150,\n  },\n  {\n    title: 'Is Used',\n    dataIndex: 'is_used',\n    key: 'is_used',\n    width: 100,\n  },\n  {\n    title: 'Status',\n    dataIndex: 'status',\n    key: 'status',\n    width: 100,\n  },\n  {\n    title: 'Created At',\n    dataIndex: 'created_at',\n    key: 'created_at',\n    width: 150,\n  },\n  {\n    title: 'Updated At',\n    dataIndex: 'updated_at',\n    key: 'updated_at',\n    width: 150,\n  },\n  {\n    title: 'Model ID',\n    dataIndex: ['model', 'id'],\n    key: 'model_id',\n    width: 100,\n  },\n  {\n    title: 'Model Name',\n    dataIndex: ['model', 'name'],\n    key: 'model_name',\n    width: 150,\n  },\n\n  {\n    title: 'Generation ID',\n    dataIndex: ['generation', 'id'],\n    key: 'generation_id',\n    width: 100,\n  },\n  {\n    title: 'Generation Name',\n    dataIndex: ['generation', 'name'],\n    key: 'generation_name',\n    width: 150,\n    fixed: 'right',\n  },\n];\n\nexport interface FixedTableProps {\n  data: Autopart[];\n  loading: boolean;\n  tableRef: any;\n}\n","import { Table } from 'antd';\nimport { FixedTableProps, columns } from '@app/components/types/catalog/catalogTypes';\n\nconst FixedTable: React.FC<FixedTableProps> = ({ data, loading, tableRef }) => {\n  return (\n    <Table\n      ref={tableRef}\n      columns={columns}\n      dataSource={data}\n      scroll={{ x: 5500 }}\n      loading={loading}\n      locale={{ emptyText: 'No data found' }}\n    />\n  );\n};\n\nexport default FixedTable;\n","import React, { FC, useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { Button, Typography } from 'antd';\nimport { ExportOutlined, SettingOutlined } from '@ant-design/icons';\nimport SearchComponent from '@app/components/bazon/catalog-components/SearchComponent';\nimport FixedTable from '@app/components/tables/fixedTable/FixedTable';\nimport { Autopart } from '@app/components/types/catalog/catalogTypes';\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\nimport Incomes from '../incomes/Incomes';\n\nconst Catalog: FC = () => {\n  const [data, setData] = useState<Autopart[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const tableRef = useRef(null);\n  const [filteredData, setFilteredData] = useState<Autopart[]>([]);\n  const [searchTerm, setSearchTerm] = useState<string>('');\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get<Autopart[]>('http://95.85.121.153:3030/autoparts/');\n      setData(response.data);\n      console.log(response.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSearchSelect = (selectedValue: string) => {\n    setSearchTerm(selectedValue);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const lowerCaseSearchTerm = searchTerm.trim().toLowerCase();\n\n    if (lowerCaseSearchTerm === '') {\n      // If no search term, show the full table\n      setFilteredData(data);\n    } else {\n      // If there's a search term, filter the table\n      const filtered = data.filter((item) => {\n        // Check if item.cross_number is defined and is a string\n        return (\n          item.cross_number &&\n          typeof item.cross_number === 'string' &&\n          item.cross_number.toLowerCase().includes(lowerCaseSearchTerm)\n        );\n      });\n      setFilteredData(filtered);\n    }\n  }, [data, searchTerm]);\n\n  return (\n    <>\n      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: 50 }}>\n        <SearchComponent onSearchSelect={handleSearchSelect} setFilteredData={setFilteredData} data={data} />\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end', gap: 20 }}>\n          <DownloadTableExcel currentTableRef={tableRef.current} filename=\"autoparts-table\" sheet=\"autoparts\">\n            <Button icon={<ExportOutlined />}>Export Table Data</Button>\n          </DownloadTableExcel>\n          <Button loading={loading} icon={<SettingOutlined />}>\n            Columns Manager\n          </Button>\n          <Incomes />\n        </div>\n      </div>\n\n      {filteredData.length > 0 ? (\n        <FixedTable data={filteredData} tableRef={tableRef} loading={loading} />\n      ) : (\n        <Typography.Text>No results found</Typography.Text>\n      )}\n    </>\n  );\n};\n\nexport default Catalog;\n"],"sourceRoot":""}